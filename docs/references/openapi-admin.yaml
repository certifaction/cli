openapi: "3.1.0"

info:
  title: Certifaction Admin API
  description: |
    Certifaction Admin API is used to manage users, roles and teamspaces.
  version: ""

servers:
  - url: https://api.certifaction.io

security:
  - api_key: [ ]

tags:
  - name: Organization
    description: Manage your organization, users, and roles.
  - name: Teamspace
    description: Manage teamspaces and their members.
components:

  responses:
    bad_request:
      description: The request is not properly formed. For example, the content could not be read.
    unauthorized:
      description: You are not authorized to carry out the operation. Check that your API key is correct.
    forbidden:
      description: You do not have permission to carry out the operation. For example you might not have the required role.
    not_found:
      description: The requested resource was not found.
    conflict:
      description: Conflict detected in the request. For example, a user might have already been joined an organization.
    internal_server_error:
      description: An error occurred on the server

  securitySchemes:
    api_key:
      name: Authorization
      in: header
      type: apiKey

  schemas:
    teamspace_member_add_request:
      type: object
      properties:
        member_user_ids:
          type: array
          items:
            type: string
          description: List of user IDs to add to the teamspace
        member_user_emails:
          type: array
          items:
            type: string
          description: List of user emails to invite to the teamspace
        send_email:
          type: boolean
          description: Whether to send an email invitation. Default is true if not specified.
      anyOf:
        - required: [member_user_ids]
        - required: [member_user_emails]
          
    teamspace_rename_request:
      type: object
      properties:
        name:
          type: string
          description: The new name for the teamspace
      required:
        - name

    organization:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          minLength: 2
          maxLength: 80
        name_verified:
          type: boolean
        email:
          type: string
          format: email
          nullable: true
        organization_users:
          type: array
          items:
            $ref: '#/components/schemas/organization_user'
        quota:
          type: integer
          nullable: true
        legacy_credits:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/organization_role'

    organization_user:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        role:
          deprecated: true
        status:
          type: string
        invite_email:
          type: string
          format: email
          nullable: true
        organization:
          type: boolean
        is_admin:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/organization_role'
        teamspaces:
          type: array
          items:
            $ref: '#/components/schemas/team_space_description'
          nullable: true

    organization_role:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        default:
          type: boolean
        admin:
          type: boolean

    team_space_description:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    user:
      properties:
        id:
          type: integer
        uid:
          type: string
        email:
          type: string
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
        quota:
          type: integer
        subscription_type:
          type: string
        theme:
          properties:
            name:
              type: string
          required:
            - name
        name_verified:
          type: boolean

    role_update:
      type: object
      properties:
        role_id:
          type: string
          description: The ID of the role to be assigned to the user.
      anyOf:
        - properties:
            user_uid:
              type: string
              description: The unique identifier of the user. Either user_uid or invite_email must be provided.
          required: [user_uid]
        - properties:
            invite_email:
              description: The email of the user being invited. Either user_uid or invite_email must be provided.
              type: string
          required: [invite_email]

  requestBodies:
    organization_user_invite:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              role_id:
                type: string
              send_email:
                type: boolean
                description: "Whether to send an email invitation. Default is true if not specified."

    organization_role_assign:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_uid:
                type: string
                description: "Either user_uid OR invite_email have to be set, depending if the user already joined or not"
              invite_email:
                type: string
              role_id:
                type: string

paths:
  "/organization":
    get:
      tags:
        - Organization
      summary: Get your organization
      operationId: getOrganization
      responses:
        "200":
          description: Organization details fetched successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/organization"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"

  "/organization/{id}/user":
    post:
      tags:
        - Organization
      summary: Invite user
      description: "A user could be invited multiple times, assuming he didn't accept the invite yet. An email is sent out for each invitation"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the organization to which you want to invite the user
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/organization_user_invite"
      responses:
        "200":
          description: Invited
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internal_server_error"

    delete:
      tags:
        - Organization
      summary: Remove a user from an organization
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the organization
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              anyOf:
                - properties:
                    user_uid:
                      type: string
                      description: The UID of the user to remove
                  required: [user_uid]
                - properties:
                    invite_email:
                      description: The email of the invited user to remove
                      type: string
                  required: [invite_email]
      responses:
        "200":
          description: User removed successfully
        "400":
          $ref: "#/components/responses/bad_request"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internal_server_error"

  "/organization/{organization_id}/role":
    post:
      tags:
        - Organization
      summary: Change the role of a user
      description: Change a user's role in an organization, using either user UID or invite email.
      parameters:
        - name: organization_id
          in: path
          required: true
          description: The ID of the organization
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/organization_role_assign'
      responses:
        "200":
          description: Role updated successfully
        "400":
          $ref: "#/components/responses/bad_request"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internal_server_error"

  "/team-space/{id}/rename":
    patch:
      tags:
        - Teamspace
      summary: Rename a teamspace
      description: Update the name of a teamspace.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the teamspace to rename
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/teamspace_rename_request"
      responses:
        "201":
          description: Teamspace renamed successfully
        "400":
          $ref: "#/components/responses/bad_request"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
          
  "/team-space/{id}/members":
    post:
      tags:
        - Teamspace
      summary: Add members to a teamspace
      description: Add one or more users to a teamspace by user ID or email.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the teamspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/teamspace_member_add_request"
      responses:
        "201":
          description: Members added successfully
        "400":
          $ref: "#/components/responses/bad_request"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
          
  "/team-space/{id}/members/{memberId}":
    delete:
      tags:
        - Teamspace
      summary: Remove a member from a teamspace
      description: Remove a specific user from a teamspace.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the teamspace
        - name: memberId
          in: path
          required: true
          schema:
            type: string
          description: User's UID to remove
        - name: send_email
          in: query
          required: false
          schema:
            type: boolean
            default: true
          description: Whether to send a notification email. Default is true.
      responses:
        "204":
          description: Member removed successfully
        "400":
          $ref: "#/components/responses/bad_request"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
